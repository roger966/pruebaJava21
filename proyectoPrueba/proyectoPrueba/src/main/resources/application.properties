spring.application.name=proyectoPrueba

#######################  con la bd h2 por defecto##################################
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driver-class-name=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=password
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#######################  con la bd h2 por defecto##################################

##### con variables de entorno ;P
# Usamos las variables de entorno para la conexión a H2
#spring.datasource.url=jdbc:h2:${DB_NAME:h2mem}

##############################docker con h2##################################################
#spring.datasource.url=jdbc:h2:${DB_URL:mem:testdb};DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
#spring.datasource.driver-class-name=org.h2.Driver
#spring.datasource.username=${DB_USER:sa}
#spring.datasource.password=${DB_PASSWORD:password}
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
################################docker con h2#################################################

######https://www.youtube.com/watch?v=cMXTd6PoFpo

#springboot.api.docs.enable=true
#springboot.swagger-ui.enabled=true

#####******************** video de docker con postgres
#https://www.youtube.com/watch?v=uqBZEL9m2V4

######*****************imagen con postgres*****************************************#######
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
### para los cambios así de ultimo momento se debe lanzar esto:
#### para empaquetar todo con lo dl ultimo time: ./mvnw clean package -DskipTests
### se puede usar docker secret para no exponer las variables de entorno.
######*****************imagen con postgres*****************************************#######


######*****************BD:postgres local*****************************************#######
#spring.datasource.url=jdbc:postgresql://localhost:5433/postgres
#spring.datasource.username=postgres
#spring.datasource.password=postgres
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
######*****************BD:postgres local*****************************************#######
# Configuración básica para Swagger
springdoc.api-docs.enabled=true              # Habilita el endpoint de OpenAPI
springdoc.swagger-ui.enabled=true           # Habilita la interfaz de Swagger UI
springdoc.swagger-ui.path=/swagger-ui.html  # Ruta de acceso al Swagger UI

# Personaliza la API (opcional)
springdoc.api-docs.title=Mi API
springdoc.api-docs.description=Documentación de mi API RESTful
springdoc.api-docs.version=1.0.0
springdoc.api-docs.contact.name=Nombre del Contacto
springdoc.api-docs.contact.url=http://www.ejemplo.com
springdoc.api-docs.contact.email=contacto@ejemplo.com
springdoc.api-docs.license.name=Licencia de Ejemplo
springdoc.api-docs.license.url=http://www.ejemplo.com/licencia
springdoc.api-docs.servers[0].url=http://localhost:8080
springdoc.api-docs.servers[0].description=Servidor de Desarrollo